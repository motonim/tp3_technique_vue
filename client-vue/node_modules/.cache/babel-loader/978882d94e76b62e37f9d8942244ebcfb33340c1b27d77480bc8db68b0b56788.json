{"ast":null,"code":"import ProductDataService from '@/services/ProductDataService';\nexport default {\n  props: ['inventory', 'updateInv'],\n  data() {\n    return {\n      product: {},\n      id: parseInt(this.$route.params.id)\n    };\n  },\n  methods: {\n    updateProduct() {\n      ProductDataService.update(this.id, this.product).then(response => {\n        this.updateInv(this.productIndex, this.product);\n        this.submitted = true;\n      });\n    }\n  },\n  computed: {\n    productIndex() {\n      const index = this.inventory.findIndex(p => {\n        return p.id === this.id;\n      });\n      return index;\n    }\n  },\n  mounted() {\n    ProductDataService.get(this.id).then(response => {\n      this.product = response.data;\n    });\n  }\n};","map":{"version":3,"mappings":"AAoDA,OAAOA,kBAAiB,MAAO,+BAA8B;AAE7D,eAAe;EACbC,KAAK,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;EACjCC,IAAG,GAAK;IACN,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MACXC,EAAE,EAAEC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACH,EAAE;IACpC;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,aAAY,GAAK;MACfT,kBAAkB,CAACU,MAAM,CAAC,IAAI,CAACN,EAAE,EAAE,IAAI,CAACD,OAAO,EAC5CQ,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACX,OAAO;QAC9C,IAAI,CAACY,SAAQ,GAAI,IAAG;MACtB,CAAC;IACL;EACF,CAAC;EACDC,QAAQ,EAAE;IACRF,YAAW,GAAK;MACd,MAAMG,KAAI,GAAI,IAAI,CAACC,SAAS,CAACC,SAAS,CAAEC,CAAC,IAAK;QAC5C,OAAOA,CAAC,CAAChB,EAAC,KAAM,IAAI,CAACA,EAAC;MACxB,CAAC;MACD,OAAOa,KAAI;IACb;EACF,CAAC;EACDI,OAAM,GAAK;IACTrB,kBAAkB,CAACsB,GAAG,CAAC,IAAI,CAAClB,EAAE,EAC3BO,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACT,OAAM,GAAIS,QAAQ,CAACV,IAAG;IAC7B,CAAC;EACL;AACF","names":["ProductDataService","props","data","product","id","parseInt","$route","params","methods","updateProduct","update","then","response","updateInv","productIndex","submitted","computed","index","inventory","findIndex","p","mounted","get"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/etape4/techniques/TP3/client-vue/src/views/EditProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container my-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col col-md-8\">\r\n        <img class=\"img-fluid\" :src=\"'/img/450/'+product.photo\" alt=\"{{ product.name }}\" />\r\n      </div>\r\n      <div class=\"col col-md-4\">\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\">\r\n            <h3>{{ product.name }}</h3>\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Prix: $ {{ product.price }}\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Description: {{ product.description }}\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Category: {{ product.category }}\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Status: {{ product.stock }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- <div class=\"col col-md-3\">\r\n        <div class=\"card\">\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Prix:</div>\r\n                <div class=\"col\">\r\n                  <strong>$ {{ product.price}}</strong>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Status:</div>\r\n                <div class=\"col\">\r\n                  {{ product.stock }}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductDataService from '@/services/ProductDataService'\r\n\r\nexport default {\r\n  props: ['inventory', 'updateInv'],\r\n  data () {\r\n    return {\r\n      product: {},\r\n      id: parseInt(this.$route.params.id)\r\n    }\r\n  },\r\n  methods: {\r\n    updateProduct () {\r\n      ProductDataService.update(this.id, this.product)\r\n        .then(response => {\r\n          this.updateInv(this.productIndex, this.product)\r\n          this.submitted = true\r\n        })\r\n    },\r\n  },\r\n  computed: {\r\n    productIndex () {\r\n      const index = this.inventory.findIndex((p) => {\r\n        return p.id === this.id\r\n      })\r\n      return index\r\n    }\r\n  },\r\n  mounted () {\r\n    ProductDataService.get(this.id)\r\n      .then(response => {\r\n        this.product = response.data\r\n      })\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}