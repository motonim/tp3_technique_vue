{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container my-5\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col col-md-8\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"col col-md-4\"\n};\nconst _hoisted_6 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_7 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_8 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_9 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_10 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_11 = {\n  class: \"list-group-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    class: \"img-fluid\",\n    src: '/img/450/' + $data.product.photo,\n    alt: \"{{ product.name }}\"\n  }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"ul\", _hoisted_6, [_createElementVNode(\"li\", _hoisted_7, [_createElementVNode(\"h3\", null, _toDisplayString($data.product.name), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_8, \" Prix: $ \" + _toDisplayString($data.product.price), 1 /* TEXT */), _createElementVNode(\"li\", _hoisted_9, \" Description: \" + _toDisplayString($data.product.description), 1 /* TEXT */), _createElementVNode(\"li\", _hoisted_10, \" Category: \" + _toDisplayString($data.product.category), 1 /* TEXT */), _createElementVNode(\"li\", _hoisted_11, \" Status: \" + _toDisplayString($data.product.stock), 1 /* TEXT */)])]), _createCommentVNode(\" <div class=\\\"col col-md-3\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li class=\\\"list-group-item\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">Prix:</div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <strong>$ {{ product.price}}</strong>\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li class=\\\"list-group-item\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">Status:</div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  {{ product.stock }}\\r\\n                </div>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div> \")])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAc;;;EAGpBA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAA6B;;EACjCA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;uBAnBnCC,oBA+CM,OA/CNC,UA+CM,GA9CJC,oBA6CM,OA7CNC,UA6CM,GA5CJD,oBAEM,OAFNE,UAEM,GADJF,oBAAmF;IAA9EH,KAAK,EAAC,WAAW;IAAEM,GAAG,gBAAcC,aAAO,CAACC,KAAK;IAAEC,GAAG,EAAC;yCAE9DN,oBAkBM,OAlBNO,UAkBM,GAjBJP,oBAgBK,MAhBLQ,UAgBK,GAfHR,oBAEK,MAFLS,UAEK,GADHT,oBAA2B,6BAApBI,aAAO,CAACM,IAAI,oBAErBV,oBAEK,MAFLW,UAEK,EAFuB,WAClB,oBAAGP,aAAO,CAACQ,KAAK,kBAE1BZ,oBAEK,MAFLa,UAEK,EAFuB,gBACb,oBAAGT,aAAO,CAACU,WAAW,kBAErCd,oBAEK,MAFLe,WAEK,EAFuB,aAChB,oBAAGX,aAAO,CAACY,QAAQ,kBAE/BhB,oBAEK,MAFLiB,WAEK,EAFuB,WAClB,oBAAGb,aAAO,CAACc,KAAK,sBAI9BC,8wBAqBU","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","$data","photo","alt","_hoisted_5","_hoisted_6","_hoisted_7","name","_hoisted_8","price","_hoisted_9","description","_hoisted_10","category","_hoisted_11","stock","_createCommentVNode"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/etape4/techniques/TP3/client-vue/src/views/EditProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container my-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col col-md-8\">\r\n        <img class=\"img-fluid\" :src=\"'/img/450/'+product.photo\" alt=\"{{ product.name }}\" />\r\n      </div>\r\n      <div class=\"col col-md-4\">\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\">\r\n            <h3>{{ product.name }}</h3>\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Prix: $ {{ product.price }}\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Description: {{ product.description }}\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Category: {{ product.category }}\r\n          </li>\r\n          <li class=\"list-group-item\">\r\n            Status: {{ product.stock }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- <div class=\"col col-md-3\">\r\n        <div class=\"card\">\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Prix:</div>\r\n                <div class=\"col\">\r\n                  <strong>$ {{ product.price}}</strong>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Status:</div>\r\n                <div class=\"col\">\r\n                  {{ product.stock }}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductDataService from '@/services/ProductDataService'\r\n\r\nexport default {\r\n  props: ['inventory', 'updateInv'],\r\n  data () {\r\n    return {\r\n      product: {},\r\n      id: parseInt(this.$route.params.id)\r\n    }\r\n  },\r\n  methods: {\r\n    updateProduct () {\r\n      ProductDataService.update(this.id, this.product)\r\n        .then(response => {\r\n          this.updateInv(this.productIndex, this.product)\r\n          this.submitted = true\r\n        })\r\n    },\r\n  },\r\n  computed: {\r\n    productIndex () {\r\n      const index = this.inventory.findIndex((p) => {\r\n        return p.id === this.id\r\n      })\r\n      return index\r\n    }\r\n  },\r\n  mounted () {\r\n    ProductDataService.get(this.id)\r\n      .then(response => {\r\n        this.product = response.data\r\n      })\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}